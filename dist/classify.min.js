var Classify={},ko;try{ko=require("knockout")}catch(error){}Classify.newClass=function(t){var o=function(t){var o=this;"parent"in this&&"_innerConstructor"in this.parent&&this.parent._innerConstructor.call(this,t),"_innerConstructor"in this&&this._innerConstructor.call(this,t),_.isUndefined(ko)||$.each(o._ko_computeds,function(t,n){var r,e;if(_.isFunction(n))r=n;else{if(!(_.keys(n).length>0))return;"function"in n&&(r=n["function"]),"subscription"in n&&(e=n.subscription)}var i=function(){var t;try{t=r.call(o,arguments)}catch(n){return void 0}return t};o[t]=ko.computed(i,o),_.isFunction(e)&&o[t].subscribe(function(){e.apply(o,arguments)})})};"parent"in t&&(o.prototype=Object.create(t.parent.prototype),o.prototype.parent=Object.create(t.parent.prototype)),o.prototype.constructor=o,"function"==typeof t.constructor&&(o.prototype._innerConstructor=t.constructor);var n={};return"computeds"in t&&(n=t.computeds),"parent"in o.prototype&&"_ko_computeds"in o.prototype.parent&&(n=_.extend(o.prototype.parent._ko_computeds,n)),o.prototype._ko_computeds=n,o.addMethod=function(t,o){this.prototype[t]=o},o.prototype.addMethod=o.addMethod,"methods"in t&&$.each(t.methods,function(t,n){o.addMethod(t,n)}),o},Classify.IInterfacify=Classify.newClass({constructor:function(t){},methods:{applyTo:function(t){var o=this;$.each(_.keys(o),function(n,r){r.match(/^_/)||"applyTo"===r||(t.prototype[r]=o[r])})}}});